{"version":3,"sources":["constants/filter.js","constants/action-type.js","store/selectors/todo.js","store/reducers/todo.js","store/actions/todo.js","store/actions/filter.js","store/index.js","store/reducers/filter.js","services/todo-local.js","components/header/header.js","components/item/item.js","components/list/list.js","components/footer/footer.js","components/copy-right/copy-right.js","components/app/app.js","index.js"],"names":["FILTERS","ACTION_TYPES","selectCompleted","todos","filter","todo","completed","selectNotCompleted","selectVisible","areAllCompleted","state","length","onLoad","type","onCreate","name","onRemove","id","onUpdate","values","onCompleteAll","onClearCompleted","onFilterSelect","reducers","combineReducers","action","uuidv4","map","actionCreators","todoActionCreators","filterActionCreators","mapStateToProps","itemsLeft","completedCount","visibleTodos","every","mapDispatchToProps","dispatch","bindActionCreators","withStateAndDispatch","Component","connect","storeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION__","defaultState","TodoLocal","JSON","parse","localStorage","getItem","setItem","stringify","Header","handleChange","event","this","setState","target","value","handleSubmit","key","props","render","className","placeholder","onInput","e","onKeyUp","onChange","data-testid","HeaderContainer","Item","editing","componentDidMount","handleEdit","handleCompleted","handleRemove","handleBlur","classNames","checked","onDoubleClick","onClick","onBlur","List","readOnly","htmlFor","ListContainer","Footer","itemText","filterTitles","filterTitle","href","selected","FooterContainer","CopyRight","App","loadTodos","componentDidUpdate","storeTodos","AppContainer","store","createReduxStore","createStore","document","querySelector"],"mappings":"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","file":"static/js/main.d92d8230.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed'\n};\n","export const ACTION_TYPES = {\n  load: 'LOAD',\n  create: 'CREATE',\n  remove: 'REMOVE',\n  update: 'UPDATE_TODO',\n  completeAll: 'COMPLETE_ALL',\n  clearCompleted: 'CLEAR_COMPLETED',\n  selectFilter: 'SELECT_FILTER'\n};\n","import { FILTERS } from '../../constants/filter';\n\nexport function selectCompleted(todos) {\n  return todos.filter(todo => todo.completed);\n}\n\nexport function selectNotCompleted(todos) {\n  return todos.filter(todo => !todo.completed);\n}\n\nexport function selectVisible(todos, filter) {\n  switch (filter) {\n    case FILTERS.all:\n      return [...todos];\n    case FILTERS.completed:\n      return selectCompleted(todos);\n    case FILTERS.active:\n      return selectNotCompleted(todos);\n    default:\n      return [...todos];\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { ACTION_TYPES } from '../../constants/action-type';\nimport { selectCompleted, selectNotCompleted } from '../selectors/todo';\n\nconst areAllCompleted = state => state.length && selectCompleted(state).length === state.length;\n\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ACTION_TYPES.load:\n      return [...action.todos];\n    case ACTION_TYPES.create:\n      return [...state, { id: uuidv4(), name: action.name, completed: false }];\n    case ACTION_TYPES.update:\n      return state.map(todo => (todo.id === action.values.id ? { ...todo, ...action.values } : todo));\n    case ACTION_TYPES.remove:\n      return state.filter(todo => todo.id !== action.id);\n    case ACTION_TYPES.completeAll:\n      return state.map(todo => ({ ...todo, ...{ completed: !areAllCompleted(state) } }));\n    case ACTION_TYPES.clearCompleted:\n      return selectNotCompleted(state);\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPES } from '../../constants/action-type';\n\nexport const onLoad = todos => ({ type: ACTION_TYPES.load, todos });\nexport const onCreate = name => ({ type: ACTION_TYPES.create, name });\nexport const onRemove = id => ({ type: ACTION_TYPES.remove, id });\nexport const onUpdate = values => ({ type: ACTION_TYPES.update, values });\nexport const onCompleteAll = () => ({ type: ACTION_TYPES.completeAll });\nexport const onClearCompleted = () => ({ type: ACTION_TYPES.clearCompleted });\n","import { ACTION_TYPES } from '../../constants/action-type';\n\nexport const onFilterSelect = filter => ({ type: ACTION_TYPES.selectFilter, filter });\n","import { combineReducers, createStore as createReduxStore, bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { FILTERS } from '../constants/filter';\n\nimport { todosReducer } from './reducers/todo';\nimport { filterReducer } from './reducers/filter';\n\nimport * as todoActionCreators from './actions/todo';\nimport * as filterActionCreators from './actions/filter';\n\nimport { selectNotCompleted, selectCompleted, selectVisible } from './selectors/todo';\n\nconst reducers = combineReducers({\n  todos: todosReducer,\n  filter: filterReducer\n});\n\nconst actionCreators = { ...todoActionCreators, ...filterActionCreators };\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  filter: state.filter,\n  itemsLeft: selectNotCompleted(state.todos).length,\n  completedCount: selectCompleted(state.todos).length,\n  visibleTodos: selectVisible(state.todos, state.filter),\n  areAllCompleted: state.todos.length && state.todos.every(todo => todo.completed)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actionCreators, dispatch);\n\nexport const withStateAndDispatch = Component => connect(mapStateToProps, mapDispatchToProps)(Component);\n\nconst storeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst defaultState = { todos: [], filter: FILTERS.all };\nexport const createStore = (state = defaultState) => createReduxStore(reducers, state, storeEnhancer);\n","import { ACTION_TYPES } from '../../constants/action-type';\nimport { FILTERS } from '../../constants/filter';\n\nexport const filterReducer = (state = FILTERS.all, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.selectFilter:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n","const LOCAL_STORAGE_KEY = 'todoapp_todos';\n\nexport class TodoLocal {\n  static loadTodos() {\n    return JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY) || '[]');\n  }\n\n  static storeTodos(todos) {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStateAndDispatch } from '../../store';\n\nconst ENTER_KEY = 'Enter';\n\nexport class Header extends Component {\n  state = {\n    name: ''\n  };\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleSubmit(event) {\n    if (event.key !== ENTER_KEY) {\n      return;\n    }\n\n    this.props.onCreate(this.state.name);\n    this.setState({ name: '' });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.name}\n          onInput={e => this.handleChange(e)}\n          onKeyUp={e => this.handleSubmit(e)}\n          onChange={() => {}}\n          data-testid=\"todo-create\"\n        />\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  onCreate: PropTypes.func.isRequired\n};\n\nexport const HeaderContainer = withStateAndDispatch(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class Item extends Component {\n  state = {\n    editing: false,\n    name: ''\n  };\n\n  componentDidMount() {\n    this.setState({ name: this.props.todo.name });\n  }\n\n  handleEdit() {\n    this.setState({ editing: true });\n  }\n\n  handleCompleted() {\n    this.props.onUpdate({\n      id: this.props.todo.id,\n      completed: !this.props.todo.completed\n    });\n  }\n\n  handleRemove() {\n    this.props.onRemove(this.props.todo.id);\n  }\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleBlur() {\n    this.props.onUpdate({\n      id: this.props.todo.id,\n      name: this.state.name\n    });\n    this.setState({ editing: false });\n  }\n\n  render() {\n    const { name, completed } = this.props.todo;\n\n    return (\n      <li className={classNames({ completed, editing: this.state.editing })} data-testid=\"todo-item\">\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={completed}\n            onChange={() => this.handleCompleted()}\n          />\n          <label onDoubleClick={() => this.handleEdit()} data-testid=\"todo-name\">{name}</label>\n          <button\n            className=\"destroy\"\n            onClick={() => this.handleRemove()}\n            data-testid=\"todo-remove\"\n          />\n        </div>\n        {\n          this.state.editing\n          && (\n            <input\n              className=\"edit\"\n              value={this.state.name}\n              onInput={e => this.handleChange(e)}\n              onBlur={() => this.handleBlur()}\n            />\n          )\n        }\n      </li>\n    );\n  }\n}\n\nItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Item } from '../item/item';\nimport { withStateAndDispatch } from '../../store';\n\nexport class List extends Component {\n  render() {\n    return (\n      <section className=\"main\">\n        <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" checked={this.props.areAllCompleted} readOnly />\n        <label htmlFor=\"toggle-all\" onClick={this.props.onCompleteAll} />\n\n        <ul className=\"todo-list\">\n          {this.props.visibleTodos.map(todo => (\n            <Item\n              key={todo.id}\n              todo={todo}\n              onUpdate={this.props.onUpdate}\n              onRemove={this.props.onRemove}\n            />\n          ))}\n        </ul>\n      </section>\n    );\n  }\n}\n\nList.propTypes = {\n  visibleTodos: PropTypes.array.isRequired,\n  areAllCompleted: PropTypes.bool.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onCompleteAll: PropTypes.func.isRequired\n};\n\nexport const ListContainer = withStateAndDispatch(List);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FILTERS } from '../../constants/filter';\nimport { withStateAndDispatch } from '../../store';\n\nexport class Footer extends Component {\n  render() {\n    const itemText = this.props.itemsLeft === 1 ? 'item' : 'items';\n    const filterTitles = [\n      { key: FILTERS.all, value: 'All' },\n      { key: FILTERS.active, value: 'Active' },\n      { key: FILTERS.completed, value: 'Completed' }\n    ];\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{this.props.itemsLeft}</strong>\n          <span> {itemText} left</span>\n        </span>\n        <ul className=\"filters\">\n          {filterTitles.map(filterTitle => (\n            <li key={filterTitle.key}>\n              <a\n                href=\"#\"\n                className={classNames({ selected: filterTitle.key === this.props.filter })}\n                onClick={() => this.props.onFilterSelect(filterTitle.key)}\n              >\n                {filterTitle.value}\n              </a>\n            </li>\n          ))}\n        </ul>\n        {!!this.props.completedCount && (\n          <button className=\"clear-completed\" onClick={this.props.onClearCompleted}>\n            Clear completed\n          </button>\n        )}\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  itemsLeft: PropTypes.number.isRequired,\n  completedCount: PropTypes.number.isRequired,\n  onClearCompleted: PropTypes.func.isRequired,\n  onFilterSelect: PropTypes.func.isRequired\n};\n\nexport const FooterContainer = withStateAndDispatch(Footer);\n","import React, { Component } from 'react';\n\nexport class CopyRight extends Component {\n  render() {\n    return (\n      <footer className=\"info\">\n        <p data-testid=\"instruction\">Double-click to edit a todo</p>\n        <p>\n          Created by <a href=\"http://github.com/blacksonic/\">blacksonic</a>\n        </p>\n        <p>\n          Part of <a href=\"http://todomvc.com\">TodoMVC</a>\n        </p>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoLocal } from '../../services/todo-local';\nimport { withStateAndDispatch } from '../../store';\nimport { HeaderContainer } from '../header/header';\nimport { ListContainer } from '../list/list';\nimport { FooterContainer } from '../footer/footer';\nimport { CopyRight } from '../copy-right/copy-right';\n\nexport class App extends Component {\n  componentDidMount() {\n    this.props.onLoad(TodoLocal.loadTodos());\n  }\n\n  componentDidUpdate() {\n    TodoLocal.storeTodos(this.props.todos);\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <section className=\"todoapp\">\n          <HeaderContainer />\n          {!!this.props.todos.length && <ListContainer />}\n          {!!this.props.todos.length && <FooterContainer />}\n        </section>\n        <CopyRight />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  todos: PropTypes.array.isRequired,\n  onLoad: PropTypes.func.isRequired\n};\n\nexport const AppContainer = withStateAndDispatch(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport 'todomvc-app-css/index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from './store/index';\nimport { AppContainer } from './components/app/app';\n\nrender(\n  <Provider store={createStore()}>\n    <AppContainer />\n  </Provider>,\n  document.querySelector('app-root')\n);\n"],"sourceRoot":""}