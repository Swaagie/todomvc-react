{"version":3,"sources":["constants/filter.js","constants/action-type.js","store/selectors/todo.js","store/reducers/todo.js","store/actions/todo.js","store/actions/filter.js","store/index.js","store/reducers/filter.js","services/todo-local.js","components/header/header.js","components/item/item.js","components/list/list.js","components/footer/footer.js","components/copy-right/copy-right.js","components/app/app.js","index.js"],"names":["FILTERS","ACTION_TYPES","selectVisible","todos","filter","selectCompleted","selectNotCompleted","todo","completed","onLoad","type","onCreate","name","onRemove","id","onUpdate","values","onCompleteAll","onClearCompleted","onFilterSelect","reducers","combineReducers","state","action","uuidv4","map","areAllCompleted","length","actionCreators","todoActionCreators","filterActionCreators","mapStateToProps","itemsLeft","completedCount","visibleTodos","every","mapDispatchToProps","dispatch","bindActionCreators","withStateAndDispatch","Component","connect","TodoLocal","JSON","parse","window","localStorage","getItem","setItem","stringify","Header","handleChange","event","this","setState","target","value","handleSubmit","key","props","render","className","placeholder","onInput","e","onKeyUp","onChange","data-testid","HeaderContainer","Item","editing","handleEdit","handleCompleted","handleRemove","handleBlur","componentDidMount","classNames","checked","onDoubleClick","onClick","onBlur","List","readOnly","htmlFor","ListContainer","Footer","itemText","filterTitles","filterTitle","href","selected","FooterContainer","CopyRight","App","loadTodos","componentDidUpdate","storeTodos","AppContainer","store","createReduxStore","__REDUX_DEVTOOLS_EXTENSION__","createStore","document","querySelector"],"mappings":"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","file":"static/js/main.7b6eb684.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n","export const ACTION_TYPES = {\n  load: 'LOAD',\n  create: 'CREATE',\n  remove: 'REMOVE',\n  update: 'UPDATE_TODO',\n  completeAll: 'COMPLETE_ALL',\n  clearCompleted: 'CLEAR_COMPLETED',\n  selectFilter: 'SELECT_FILTER',\n};\n","import { FILTERS } from '../../constants/filter';\n\nexport function selectVisible(todos, filter) {\n  switch (filter) {\n    case FILTERS.all:\n      return [...todos];\n    case FILTERS.completed:\n      return selectCompleted(todos);\n    case FILTERS.active:\n      return selectNotCompleted(todos);\n    default:\n      return [...todos];\n  }\n}\n\nexport function selectNotCompleted(todos) {\n  return todos.filter(todo => !todo.completed);\n}\n\nexport function selectCompleted(todos) {\n  return todos.filter(todo => todo.completed);\n}\n","import { ACTION_TYPES } from '../../constants/action-type';\nimport { v4 as uuidv4 } from 'uuid';\nimport { selectCompleted, selectNotCompleted } from '../selectors/todo';\n\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ACTION_TYPES.load:\n      return [...action.todos];\n    case ACTION_TYPES.create:\n      return [...state, { id: uuidv4(), name: action.name, completed: false }];\n    case ACTION_TYPES.update:\n      return state.map(\n        todo => todo.id === action.values.id ? { ...todo, ...action.values } : todo\n      );\n    case ACTION_TYPES.remove:\n      return state.filter(todo => todo.id !== action.id);\n    case ACTION_TYPES.completeAll:\n      const areAllCompleted = state.length && selectCompleted(state).length === state.length;\n      return state.map(\n        todo => ({ ...todo, ...{ completed: !areAllCompleted } })\n      );\n    case ACTION_TYPES.clearCompleted:\n      return selectNotCompleted(state);\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPES } from '../../constants/action-type';\n\nexport const onLoad = todos => ({ type: ACTION_TYPES.load, todos });\nexport const onCreate = name => ({ type: ACTION_TYPES.create, name });\nexport const onRemove = id => ({ type: ACTION_TYPES.remove, id });\nexport const onUpdate = values => ({ type: ACTION_TYPES.update, values });\nexport const onCompleteAll = () => ({ type: ACTION_TYPES.completeAll });\nexport const onClearCompleted = () => ({ type: ACTION_TYPES.clearCompleted });\n","import { ACTION_TYPES } from '../../constants/action-type';\n\nexport const onFilterSelect = filter => ({ type: ACTION_TYPES.selectFilter, filter });\n","import { combineReducers, createStore as createReduxStore, bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { FILTERS } from '../constants/filter';\n\nimport { todosReducer } from './reducers/todo';\nimport { filterReducer } from './reducers/filter';\n\nimport * as todoActionCreators from './actions/todo';\nimport * as filterActionCreators from './actions/filter';\n\nimport { selectNotCompleted, selectCompleted, selectVisible } from './selectors/todo';\n\nconst reducers = combineReducers({\n  todos: todosReducer,\n  filter: filterReducer\n});\n\nconst actionCreators = { ...todoActionCreators, ...filterActionCreators };\n\nconst mapStateToProps = state => ({\n  todos: state.todos,\n  filter: state.filter,\n  itemsLeft: selectNotCompleted(state.todos).length,\n  completedCount: selectCompleted(state.todos).length,\n  visibleTodos: selectVisible(state.todos, state.filter),\n  areAllCompleted: state.todos.length && state.todos.every(todo => todo.completed)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators(actionCreators, dispatch);\n\nexport const withStateAndDispatch = Component => connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport const createStore = (state = { todos: [], filter: FILTERS.all }) => createReduxStore(\n  reducers, state, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { ACTION_TYPES } from '../../constants/action-type';\nimport { FILTERS } from '../../constants/filter';\n\nexport const filterReducer = (state = FILTERS.all, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.selectFilter:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n","const LOCAL_STORAGE_KEY = 'todoapp_todos';\n\nexport class TodoLocal {\n  static loadTodos() {\n    return JSON.parse(\n      window.localStorage.getItem(LOCAL_STORAGE_KEY) || '[]'\n    );\n  }\n\n  static storeTodos(todos) {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStateAndDispatch } from '../../store';\nconst ENTER_KEY = 'Enter';\n\nexport class Header extends Component {\n  static propTypes = {\n    onCreate: PropTypes.func.isRequired\n  };\n\n  state = {\n    name: ''\n  };\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit(event) {\n    if (event.key !== ENTER_KEY) {\n      return;\n    }\n\n    this.props.onCreate(this.state.name);\n    this.setState({ name: '' });\n  }\n\n  render() {\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={this.state.name}\n          onInput={e => this.handleChange(e)}\n          onKeyUp={e => this.handleSubmit(e)}\n          onChange={() => {}}\n          data-testid=\"todo-create\"\n        />\n      </header>\n    );\n  }\n}\n\nexport const HeaderContainer = withStateAndDispatch(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport class Item extends Component {\n  static propTypes = {\n    todo: PropTypes.object.isRequired,\n    onUpdate: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired\n  };\n\n  state = {\n    editing: false,\n    name: ''\n  };\n\n  handleEdit() {\n    this.setState({ editing: true });\n  }\n\n  handleCompleted() {\n    this.props.onUpdate({\n      id: this.props.todo.id,\n      completed: !this.props.todo.completed\n    });\n  }\n\n  handleRemove() {\n    this.props.onRemove(this.props.todo.id);\n  }\n\n  handleChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleBlur() {\n    this.props.onUpdate({\n      id: this.props.todo.id,\n      name: this.state.name\n    });\n    this.setState({ editing: false });\n  }\n\n  componentDidMount() {\n    this.setState({ name: this.props.todo.name });\n  }\n\n  render() {\n    const { name, completed } = this.props.todo;\n\n    return (\n      <li className={classNames({ completed, editing: this.state.editing })} data-testid=\"todo-item\">\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={completed}\n            onChange={() => this.handleCompleted()}\n          />\n          <label onDoubleClick={() => this.handleEdit()} data-testid=\"todo-name\">{name}</label>\n          <button\n            className=\"destroy\"\n            onClick={() => this.handleRemove()}\n            data-testid=\"todo-remove\"\n          />\n        </div>\n        {\n          this.state.editing &&\n          <input\n            className=\"edit\"\n            value={this.state.name}\n            onInput={e => this.handleChange(e)}\n            onBlur={() => this.handleBlur()}\n          />\n        }\n      </li>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Item } from '../item/item';\nimport { withStateAndDispatch } from '../../store';\n\nexport class List extends Component {\n  static propTypes = {\n    visibleTodos: PropTypes.array.isRequired,\n    areAllCompleted: PropTypes.bool.isRequired,\n    onUpdate: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onCompleteAll: PropTypes.func.isRequired\n  };\n\n  render() {\n    return (\n      <section className=\"main\">\n        <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" checked={this.props.areAllCompleted} readOnly />\n        <label htmlFor=\"toggle-all\" onClick={this.props.onCompleteAll}></label>\n\n        <ul className=\"todo-list\">\n          {this.props.visibleTodos.map(todo =>\n            <Item\n              key={todo.id}\n              todo={todo}\n              onUpdate={this.props.onUpdate}\n              onRemove={this.props.onRemove}\n            />\n          )}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport const ListContainer = withStateAndDispatch(List);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FILTERS } from '../../constants/filter';\nimport { withStateAndDispatch } from '../../store';\n\nexport class Footer extends Component {\n  static propTypes = {\n    todos: PropTypes.array.isRequired,\n    filter: PropTypes.string.isRequired,\n    itemsLeft: PropTypes.number.isRequired,\n    completedCount: PropTypes.number.isRequired,\n    onClearCompleted: PropTypes.func.isRequired,\n    onFilterSelect: PropTypes.func.isRequired\n  };\n\n  render() {\n    const itemText = this.props.itemsLeft === 1 ? 'item' : 'items';\n    const filterTitles = [\n      { key: FILTERS.all, value: 'All' },\n      { key: FILTERS.active, value: 'Active' },\n      { key: FILTERS.completed, value: 'Completed' }\n    ];\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\"><strong>{this.props.itemsLeft}</strong><span> {itemText} left</span></span>\n        <ul className=\"filters\">\n          {filterTitles.map(filterTitle =>\n            <li key={filterTitle.key}>\n              <a\n                href=\"#\"\n                className={classNames({ selected: filterTitle.key === this.props.filter })}\n                onClick={() => this.props.onFilterSelect(filterTitle.key)}\n              >\n                {filterTitle.value}\n              </a>\n            </li>\n          )}\n        </ul>\n        {\n          !!this.props.completedCount &&\n          <button className=\"clear-completed\" onClick={this.props.onClearCompleted}>Clear completed</button>\n        }\n      </footer>\n    );\n  }\n}\n\nexport const FooterContainer = withStateAndDispatch(Footer);\n","import React, { Component } from 'react';\n\nexport class CopyRight extends Component {\n  render() {\n    return (\n      <footer className=\"info\">\n        <p data-testid=\"instruction\">Double-click to edit a todo</p>\n        <p>Created by <a href=\"http://github.com/blacksonic/\">blacksonic</a></p>\n        <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoLocal } from '../../services/todo-local';\nimport { withStateAndDispatch } from '../../store';\nimport { HeaderContainer } from '../header/header';\nimport { ListContainer } from '../list/list';\nimport { FooterContainer } from '../footer/footer';\nimport { CopyRight } from '../copy-right/copy-right';\n\nexport class App extends Component {\n  static propTypes = {\n    todos: PropTypes.array.isRequired,\n    onLoad: PropTypes.func.isRequired\n  };\n\n  componentDidMount() {\n    this.props.onLoad(TodoLocal.loadTodos());\n  }\n\n  componentDidUpdate() {\n    TodoLocal.storeTodos(this.props.todos);\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <section className=\"todoapp\">\n          <HeaderContainer />\n          {\n            !!this.props.todos.length &&\n            <ListContainer />\n          }\n          {\n            !!this.props.todos.length &&\n            <FooterContainer />\n          }\n        </section>\n        <CopyRight />\n      </div>\n    );\n  }\n}\n\nexport const AppContainer = withStateAndDispatch(App);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport 'todomvc-app-css/index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from './store/index';\nimport { AppContainer } from './components/app/app';\n\nrender(\n  <Provider store={createStore()}>\n    <AppContainer />\n  </Provider>,\n  document.querySelector('app-root')\n);\n"],"sourceRoot":""}