module.exports = { contents: "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Item = void 0;\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar prop_types_1 = require(\"prop-types\");\nvar classnames_1 = require(\"classnames\");\nvar Item = /** @class */ (function (_super) {\n    tslib_1.__extends(Item, _super);\n    function Item() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var _this = _super.apply(this, args) || this;\n        _this.state = {\n            editing: false,\n            name: ''\n        };\n        return _this;\n    }\n    Item.prototype.componentDidMount = function () {\n        this.setState({ name: this.props.todo.name });\n    };\n    Item.prototype.handleEdit = function () {\n        this.setState({ editing: true });\n    };\n    Item.prototype.handleCompleted = function () {\n        this.props.onUpdate({\n            id: this.props.todo.id,\n            completed: !this.props.todo.completed\n        });\n    };\n    Item.prototype.handleRemove = function () {\n        this.props.onRemove(this.props.todo.id);\n    };\n    Item.prototype.handleChange = function (event) {\n        this.setState({ name: event.target.value });\n    };\n    Item.prototype.handleBlur = function () {\n        this.props.onUpdate({\n            id: this.props.todo.id,\n            name: this.state.name\n        });\n        this.setState({ editing: false });\n    };\n    Item.prototype.render = function () {\n        var _this = this;\n        var _a = this.props.todo, name = _a.name, completed = _a.completed;\n        return (react_1.default.createElement(\"li\", { className: classnames_1.default({ completed: completed, editing: this.state.editing }), \"data-testid\": \"todo-item\" },\n            react_1.default.createElement(\"div\", { className: \"view\" },\n                react_1.default.createElement(\"input\", { className: \"toggle\", type: \"checkbox\", checked: completed, onChange: function () { return _this.handleCompleted(); } }),\n                react_1.default.createElement(\"label\", { onDoubleClick: function () { return _this.handleEdit(); }, \"data-testid\": \"todo-name\" }, name),\n                react_1.default.createElement(\"button\", { className: \"destroy\", onClick: function () { return _this.handleRemove(); }, \"data-testid\": \"todo-remove\" })),\n            this.state.editing\n                && (react_1.default.createElement(\"input\", { className: \"edit\", value: this.state.name, onInput: function (e) { return _this.handleChange(e); }, onBlur: function () { return _this.handleBlur(); } }))));\n    };\n    return Item;\n}(react_1.Component));\nexports.Item = Item;\nItem.propTypes = {\n    todo: prop_types_1.default.object.isRequired,\n    onUpdate: prop_types_1.default.func.isRequired,\n    onRemove: prop_types_1.default.func.isRequired\n};\n",
dependencies: ["react","prop-types","classnames"],
sourceMap: {},
headerContent: undefined,
mtime: 1598428287042,
devLibsRequired : undefined,
ac : undefined,
_ : {}
}
