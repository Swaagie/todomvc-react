{"id":"gSdO","dependencies":[{"name":"/Users/martijnswaagman/projects/todomvc-react/package.json","includedInParent":true,"mtime":1598429323814},{"name":"/Users/martijnswaagman/projects/todomvc-react/node_modules/react-redux/package.json","includedInParent":true,"mtime":1598426639709},{"name":"@babel/runtime/helpers/esm/extends","loc":{"line":1,"column":21},"parent":"/Users/martijnswaagman/projects/todomvc-react/node_modules/react-redux/es/connect/mergeProps.js","resolved":"/Users/martijnswaagman/projects/todomvc-react/node_modules/@babel/runtime/helpers/esm/extends.js"},{"name":"../utils/verifyPlainObject","loc":{"line":2,"column":30},"parent":"/Users/martijnswaagman/projects/todomvc-react/node_modules/react-redux/es/connect/mergeProps.js","resolved":"/Users/martijnswaagman/projects/todomvc-react/node_modules/react-redux/es/utils/verifyPlainObject.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultMergeProps = defaultMergeProps;\nexports.wrapMergePropsFunc = wrapMergePropsFunc;\nexports.whenMergePropsIsFunction = whenMergePropsIsFunction;\nexports.whenMergePropsIsOmitted = whenMergePropsIsOmitted;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/esm/extends\"));\n\nvar _verifyPlainObject = _interopRequireDefault(require(\"../utils/verifyPlainObject\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return (0, _extends2.default)({}, ownProps, {}, stateProps, {}, dispatchProps);\n}\n\nfunction wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (\"development\" !== 'production') (0, _verifyPlainObject.default)(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\n\nfunction whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\n\nfunction whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\n\nvar _default = [whenMergePropsIsFunction, whenMergePropsIsOmitted];\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"9e093a49915552426d3044b4b67b5525","cacheData":{"env":{"NODE_ENV":"development"}}}